
import "nes";
import "define";

namespace joypad {

	struct Player {
		past_jump : u8, // previous state of button A
		jump      : u8, // button A
		grab      : u8, // button B
		select    : u8, // button Select
		move_y    : i8, // up & down
		move_x    : i8, // left & right
	}

	in zeropage {
		var pause : u8;
	}

	// store player inputs in RAM because it takes more space
	// and it is more convenient to use
	in RAM {
		var player1, player2 : Player;
	}

	in program {

		// read the players' inputs
		func read () {
			// latch the controllers
			nes.joy.output = a = 1;
			nes.joy.output = a = 0;

			// store that player was pressing jump button on previous frame
			player1.past_jump = a = player1.jump;

			// read controller inputs one by one
			player1.jump   = a = nes.joy.input1 & 0b1;
			player1.grab   = a = nes.joy.input1 & 0b1;
			player1.select = a = nes.joy.input1 & 0b1;

			// either controllers can bring up the same pause menu
			x = pause;
			pause = a = nes.joy.input1 & 0b1;

			// read directional inputs
			y = 0;
			if {a = nes.joy.input1 & 0b1;} && !zero {++y;}
			if {a = nes.joy.input1 & 0b1;} && !zero {--y;}
			player1.move_y = y as i8;
			
			// read directional inputs
			x = 0;
			if {a = nes.joy.input1 & 0b1;} && !zero {++x;}
			if {a = nes.joy.input1 & 0b1;} && !zero {--x;}
			player1.move_x = x as i8;
		}
	}

}