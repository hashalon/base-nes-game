
import "nes";
import "define";

namespace joypad {

	struct Player {
		past_jump : u8, // previous state of button A
		jump      : u8, // button A
		grab      : u8, // button B
		select    : u8, // button Select
		move_y    : i8, // up & down
		move_x    : i8, // left & right
	}

	in zeropage {
		var pause : u8;

		var ptr_player, ptr_input : *u8;
	}

	// store player inputs in RAM because it takes more space
	// and it is more convenient to use
	in RAM {
		var player1, player2 : Player;
	}

	in program {

		// read the players' inputs
		func read_both () {
			// latch the controllers
			nes.joy.output = a = 1;
			nes.joy.output = a = 0;

			// read both players inputs
			let PLAYER = [player1, player2];
			let INPUT  = [nes.joy.input1 & 0b1, nes.joy.input2 & 0b1];
			inline for let i in 0..1 {

				// store that player was pressing jump button on previous frame
				PLAYER[i].past_jump = a = PLAYER[i].jump;

				// read controller inputs one by one
				PLAYER[i].jump   = a = INPUT[i];
				PLAYER[i].grab   = a = INPUT[i];
				PLAYER[i].select = a = INPUT[i];

				// either controllers can bring up the same pause menu
				x = pause;
				pause = a = INPUT[i];

				// read directional inputs
				y = 0;
				if {a = INPUT[i];} && !zero {++y;}
				if {a = INPUT[i];} && !zero {--y;}
				PLAYER[i].move_y = y as i8;
				
				// read directional inputs
				x = 0;
				if {a = INPUT[i];} && !zero {++x;}
				if {a = INPUT[i];} && !zero {--x;}
				PLAYER[i].move_x = x as i8;
			}
		}

	}

}