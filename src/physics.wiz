
import "src/nes";
import "src/define";

namespace physics {

    // number of physics objects running at the same time
    let CAPACITY = 8 * 4; // (maximum: 8 * 32)

    in ram {
        // contains position and velocity for various bodies
        // [?] the sequence is repeated twice for x and y coordinates
        // - [0] : acceleration
        // - [1] : velocity
        // - [2] : position low  bits
        // - [3] : position high bit
        var bodies : [u8; CAPACITY];

        // size of the `bodies` buffer
        var size : u8;
    }

    in program {
        // update the position of the body based on its velocity
        inline func tick () {
            var accel @ &b0 : u8;
            var vel   @ &b1 : u8;

            // iterate over the buffer
            y = 0;
            do {
                // apply the acceleration to the velocity
                if {a = bodies[y];} && negative {
                    accel = a &= 0x7f;
                    a = bodies[++y] - accel; 
                } else {
                    accel = a;
                    a = bodies[++y] + accel;
                }

                // apply the velocity to the position
                if {bodies[y] = a;} && negative {
                    vel = a &= 0x7f;
                    bodies[y] = a = bodies[++y] - vel;
                    bodies[y] = a = bodies[++y] -# 0;
                } else {
                    vel = a;
                    bodies[y] = a = bodies[++y] + vel;
                    bodies[y] = a = bodies[++y] +# 0;
                }
            } while y < size;
        }
    }

}