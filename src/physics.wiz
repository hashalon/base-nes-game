
import "src/nes";
import "src/define";

namespace physics {

    // number of physics objects running at the same time
    let CAPACITY = 8 * 32; // (= 256; 32 is maximum)

    in ram {
        // contains position and velocity for various bodies
        // - [0] : position x high bits
        // - [1] : position x low  bits
        // - [2] : velocity x
        // - [3] : acceleration x
        // - [4] : position y high bits
        // - [5] : position y low  bits
        // - [6] : velocity y
        // - [7] : acceleration y
        var bodies : [u8; CAPACITY];

        // size of the `bodies` buffer
        var size : u8;
    }

    in program {
        // update the position of the body based on its velocity
        func tick () {
            var acceleration @ &b0 : u8;
            var velocity     @ &b1 : u8;

            // iterate over the buffer
            y = size;
            do {
                // apply the acceleration to the velocity
                if {a = bodies[--y];} && negative {
                    acceleration = a &= 0x7f;
                    a = bodies[--y] - acceleration; 
                } else {
                    acceleration = a;
                    a = bodies[--y] + acceleration;
                }

                // apply the velocity to the position
                if {bodies[y] = a;} && negative {
                    velocity  = a &= 0x7f;
                    bodies[y] = a = bodies[--y] - velocity;
                    bodies[y] = a = bodies[--y] -# 0;
                } else {
                    velocity  = a;
                    bodies[y] = a = bodies[--y] + velocity;
                    bodies[y] = a = bodies[--y] +# 0;
                }
            } while !zero;
        }
    }

}