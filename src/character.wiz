/**
 * Handle characters to be drawn
 */

import "src/nes";
import "src/define";
import "src/video";

namespace character {

    let SPR_SIZE = nes.ppu.oam.SPRITE_SIZE;
    let SPRITE_COUNT = 6;
    let CHARACTER_COUNT = 10;

    // list to manipulate meta sprites
    let SPRITE_Y    = [i * SPR_SIZE + 0 for let i in 0 .. SPRITE_COUNT - 1];
    let SPRITE_TILE = [i * SPR_SIZE + 1 for let i in 0 .. SPRITE_COUNT - 1];
    let SPRITE_ATTR = [i * SPR_SIZE + 2 for let i in 0 .. SPRITE_COUNT - 1];
    let SPRITE_X    = [i * SPR_SIZE + 3 for let i in 0 .. SPRITE_COUNT - 1];

    in RAM {
        var pos_x, pos_y, attr : u8;
    }

    in program {

        // draw a character on the screen
        func draw_character () {
            // set the Y position of the sprites
            oam_buffer[SPRITE_Y[0]] = a = pos_y;
            oam_buffer[SPRITE_Y[1]] = a;
            oam_buffer[SPRITE_Y[2]] = a += 8;
            oam_buffer[SPRITE_Y[3]] = a;
            oam_buffer[SPRITE_Y[4]] = a += 8;
            oam_buffer[SPRITE_Y[5]] = a;

            // set the X position of the sprites
            oam_buffer[SPRITE_X[0]] = a = pos_x;
            oam_buffer[SPRITE_X[2]] = a;
            oam_buffer[SPRITE_X[4]] = a;
            oam_buffer[SPRITE_X[1]] = a += 8;
            oam_buffer[SPRITE_X[3]] = a;
            oam_buffer[SPRITE_X[5]] = a;

            // set the palette of the sprites
            a = attr;
            inline for let i in 0 .. SPRITE_COUNT - 1 {
                oam_buffer[SPRITE_ATTR[i]] = a;
            }
        }
    }
}